declare const _default: {
    TokenA: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TokenA": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TokenA": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "methods": {};
        };
        "userdoc": {
            "methods": {};
        };
    };
    TokenB: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TokenB": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TokenB": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "methods": {};
        };
        "userdoc": {
            "methods": {};
        };
    };
    TokenC: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TokenC": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TokenC": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "methods": {};
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestToken: {
        "contractName": string;
        "abi": ({
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestToken": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": any[];
                "contractDependencies": any[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "constant"?: undefined;
                    "name"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "keyType"?: undefined;
                            "valueType"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "keyType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "valueType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "name"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "baseExpression"?: undefined;
                                            "indexExpression"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "functionReturnParameters": number;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": any;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "name"?: undefined;
                                                        "overloadedDeclarations"?: undefined;
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "hexValue"?: undefined;
                                        "kind"?: undefined;
                                        "subdenomination"?: undefined;
                                        "value"?: undefined;
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "expression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "memberName"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "expression"?: undefined;
                                                        "isConstant"?: undefined;
                                                        "isLValue"?: undefined;
                                                        "isPure"?: undefined;
                                                        "lValueRequested"?: undefined;
                                                        "memberName"?: undefined;
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "hexValue"?: undefined;
                                        "kind"?: undefined;
                                        "subdenomination"?: undefined;
                                        "value"?: undefined;
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "eventCall": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "typeName": string;
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                                "referencedDeclaration"?: undefined;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "memberName"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "typeName"?: undefined;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "arguments"?: undefined;
                                            "kind"?: undefined;
                                            "names"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "arguments"?: undefined;
                                            "expression"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "kind"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "names"?: undefined;
                                            "memberName"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "expression"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                        "leftHandSide"?: undefined;
                                        "operator"?: undefined;
                                        "rightHandSide"?: undefined;
                                    };
                                    "functionReturnParameters": number;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                })[];
                            };
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "functionReturnParameters": number;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "baseExpression"?: undefined;
                                                "indexExpression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "expression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "memberName"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "baseExpression"?: undefined;
                                                        "indexExpression"?: undefined;
                                                        "isConstant"?: undefined;
                                                        "isLValue"?: undefined;
                                                        "isPure"?: undefined;
                                                        "lValueRequested"?: undefined;
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "expression"?: undefined;
                                                        "isConstant"?: undefined;
                                                        "isLValue"?: undefined;
                                                        "isPure"?: undefined;
                                                        "lValueRequested"?: undefined;
                                                        "memberName"?: undefined;
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "hexValue"?: undefined;
                                        "kind"?: undefined;
                                        "subdenomination"?: undefined;
                                        "value"?: undefined;
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                                "referencedDeclaration"?: undefined;
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "baseExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "indexExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "name"?: undefined;
                                                        "overloadedDeclarations"?: undefined;
                                                        "referencedDeclaration"?: undefined;
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": any;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "name"?: undefined;
                                                        "overloadedDeclarations"?: undefined;
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "hexValue"?: undefined;
                                        "kind"?: undefined;
                                        "subdenomination"?: undefined;
                                        "value"?: undefined;
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "eventCall": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "typeName": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "arguments"?: undefined;
                                            "expression"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "kind"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "names"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "expression"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                        "leftHandSide"?: undefined;
                                        "operator"?: undefined;
                                        "rightHandSide"?: undefined;
                                    };
                                    "functionReturnParameters": number;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                })[];
                            };
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "hexValue"?: undefined;
                                "kind"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "typeName"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "kind"?: undefined;
                                    "names"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestToken": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": any[];
                "contractDependencies": any[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "constant"?: undefined;
                    "name"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "keyType"?: undefined;
                            "valueType"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "keyType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "valueType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "name"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "baseExpression"?: undefined;
                                            "indexExpression"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "functionReturnParameters": number;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": any;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "name"?: undefined;
                                                        "overloadedDeclarations"?: undefined;
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "hexValue"?: undefined;
                                        "kind"?: undefined;
                                        "subdenomination"?: undefined;
                                        "value"?: undefined;
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "expression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "memberName"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "expression"?: undefined;
                                                        "isConstant"?: undefined;
                                                        "isLValue"?: undefined;
                                                        "isPure"?: undefined;
                                                        "lValueRequested"?: undefined;
                                                        "memberName"?: undefined;
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "hexValue"?: undefined;
                                        "kind"?: undefined;
                                        "subdenomination"?: undefined;
                                        "value"?: undefined;
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "eventCall": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "typeName": string;
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                                "referencedDeclaration"?: undefined;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "memberName"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "typeName"?: undefined;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "arguments"?: undefined;
                                            "kind"?: undefined;
                                            "names"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "arguments"?: undefined;
                                            "expression"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "kind"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "names"?: undefined;
                                            "memberName"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "expression"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                        "leftHandSide"?: undefined;
                                        "operator"?: undefined;
                                        "rightHandSide"?: undefined;
                                    };
                                    "functionReturnParameters": number;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                })[];
                            };
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "functionReturnParameters": number;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": ({
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "baseExpression"?: undefined;
                                                "indexExpression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "expression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "memberName"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "baseExpression"?: undefined;
                                                        "indexExpression"?: undefined;
                                                        "isConstant"?: undefined;
                                                        "isLValue"?: undefined;
                                                        "isPure"?: undefined;
                                                        "lValueRequested"?: undefined;
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "expression"?: undefined;
                                                        "isConstant"?: undefined;
                                                        "isLValue"?: undefined;
                                                        "isPure"?: undefined;
                                                        "lValueRequested"?: undefined;
                                                        "memberName"?: undefined;
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "hexValue"?: undefined;
                                        "kind"?: undefined;
                                        "subdenomination"?: undefined;
                                        "value"?: undefined;
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                                "referencedDeclaration"?: undefined;
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "baseExpression": {
                                                        "argumentTypes": any;
                                                        "baseExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "indexExpression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "nodeType": string;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "name"?: undefined;
                                                        "overloadedDeclarations"?: undefined;
                                                        "referencedDeclaration"?: undefined;
                                                    };
                                                    "id": number;
                                                    "indexExpression": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": any;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                        "name"?: undefined;
                                                        "overloadedDeclarations"?: undefined;
                                                    };
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "hexValue"?: undefined;
                                        "kind"?: undefined;
                                        "subdenomination"?: undefined;
                                        "value"?: undefined;
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "eventCall": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "arguments": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            }[];
                                            "expression": {
                                                "argumentTypes": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                }[];
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "typeName": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "arguments"?: undefined;
                                            "expression"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "kind"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "names"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "expression"?: undefined;
                                    "functionReturnParameters"?: undefined;
                                } | {
                                    "expression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                        "leftHandSide"?: undefined;
                                        "operator"?: undefined;
                                        "rightHandSide"?: undefined;
                                    };
                                    "functionReturnParameters": number;
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                    "eventCall"?: undefined;
                                })[];
                            };
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "hexValue"?: undefined;
                                "kind"?: undefined;
                                "subdenomination"?: undefined;
                                "value"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "typeName"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "kind"?: undefined;
                                    "names"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {};
        "schemaVersion": string;
        "updatedAt": string;
        "devdoc": {
            "methods": {};
        };
        "userdoc": {
            "methods": {};
        };
    };
    ErroringToken: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "ErroringToken": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "ErroringToken": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                }[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "methods": {};
        };
        "userdoc": {
            "methods": {};
        };
    };
    OmiseToken: {
        "contractName": string;
        "abi": ({
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "OmiseToken": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": any[];
                "contractDependencies": any[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "constant"?: undefined;
                    "name"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "keyType"?: undefined;
                            "valueType"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "keyType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "valueType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "name"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "baseExpression"?: undefined;
                                            "indexExpression"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "typeName"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "kind"?: undefined;
                                    "names"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "baseExpression"?: undefined;
                                        "indexExpression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "baseExpression"?: undefined;
                                                "indexExpression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "expression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "memberName"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                                "referencedDeclaration"?: undefined;
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "typeName"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "kind"?: undefined;
                                    "names"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "OmiseToken": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": any[];
                "contractDependencies": any[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "constant"?: undefined;
                    "name"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "keyType"?: undefined;
                            "valueType"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "keyType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "valueType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "name"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "baseExpression"?: undefined;
                                            "indexExpression"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "hexValue": string;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "subdenomination": any;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "value": string;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "typeName"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "kind"?: undefined;
                                    "names"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "commonType": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "leftHandSide"?: undefined;
                                "operator"?: undefined;
                                "rightHandSide"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "baseExpression"?: undefined;
                                        "indexExpression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "baseExpression"?: undefined;
                                                "indexExpression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "expression"?: undefined;
                                                "isConstant"?: undefined;
                                                "isLValue"?: undefined;
                                                "isPure"?: undefined;
                                                "lValueRequested"?: undefined;
                                                "memberName"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                                "referencedDeclaration"?: undefined;
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": any;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                                "name"?: undefined;
                                                "overloadedDeclarations"?: undefined;
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": any;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "typeName"?: undefined;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": any;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "kind"?: undefined;
                                    "names"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                    "memberName"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0xd1398bee19313d6bf672ccb116e51f4a1a947e91c757907f51fbb5b5e56c698f": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0xa0175360a15bca328baf7ea85c7b784d58b222a50d0ce760b10dba336d226a61": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x4b2682685b046a3dae8e75ff49b82fa703e366056a43c6a791411011134f4f5d": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "methods": {};
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestCounter: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "constant"?: undefined;
            "inputs"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestCounter": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
                "scope"?: undefined;
            } | {
                "baseContracts": any[];
                "contractDependencies": any[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "keyType"?: undefined;
                            "valueType"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "keyType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "valueType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "name"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "operator": string;
                                "prefix": boolean;
                                "src": string;
                                "subExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "operator": string;
                                "prefix": boolean;
                                "src": string;
                                "subExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "operator": string;
                                "prefix": boolean;
                                "src": string;
                                "subExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestCounter": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
                "scope"?: undefined;
            } | {
                "baseContracts": any[];
                "contractDependencies": any[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "keyType"?: undefined;
                            "valueType"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "keyType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "valueType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "name"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "operator": string;
                                "prefix": boolean;
                                "src": string;
                                "subExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "operator": string;
                                "prefix": boolean;
                                "src": string;
                                "subExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "operator": string;
                                "prefix": boolean;
                                "src": string;
                                "subExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {};
        "schemaVersion": string;
        "updatedAt": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestLib: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "constant": boolean;
            "inputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "constant": boolean;
            "inputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestLib": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": any[];
                "contractDependencies": any[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestLib": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": any[];
                "contractDependencies": any[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestPriceOracle: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestPriceOracle": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": string[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestPriceOracle": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": string[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestMakerOracle: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": any[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": any[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestMakerOracle": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "components": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                })[];
                                "id": number;
                                "isConstant": boolean;
                                "isInlineArray": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "typeName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": string;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestMakerOracle": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "components": ({
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "names"?: undefined;
                                })[];
                                "id": number;
                                "isConstant": boolean;
                                "isInlineArray": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "typeName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": string;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0x644843f351d3fba4abcd60109eaff9f54bac8fb8ccf0bab941009c21df21cf31": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0x644843f351d3fba4abcd60109eaff9f54bac8fb8ccf0bab941009c21df21cf31": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0x644843f351d3fba4abcd60109eaff9f54bac8fb8ccf0bab941009c21df21cf31": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0x644843f351d3fba4abcd60109eaff9f54bac8fb8ccf0bab941009c21df21cf31": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "methods": {};
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestCurve: {
        "contractName": string;
        "abi": {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        }[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestCurve": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestCurve": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestUniswapV2Pair: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": any[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": any[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestUniswapV2Pair": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "components": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "id": number;
                                "isConstant": boolean;
                                "isInlineArray": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestUniswapV2Pair": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "components": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "id": number;
                                "isConstant": boolean;
                                "isInlineArray": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestUniswapV2Pair2: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": any[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": any[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestUniswapV2Pair2": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": any[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestUniswapV2Pair2": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": any[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestPolynomialInterestSetter: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "inputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "constant"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestPolynomialInterestSetter": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "contractScope": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestPolynomialInterestSetter": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "contractScope": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {
                "getCoefficients()": {
                    "return": string;
                };
                "getInterestRate(address,uint256,uint256)": {
                    "return": string;
                };
                "getMaxAPR()": {
                    "return": string;
                };
            };
            "title": string;
        };
        "userdoc": {
            "methods": {
                "getCoefficients()": {
                    "notice": string;
                };
                "getInterestRate(address,uint256,uint256)": {
                    "notice": string;
                };
                "getMaxAPR()": {
                    "notice": string;
                };
            };
        };
    };
    TestDoubleExponentInterestSetter: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "inputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "constant"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestDoubleExponentInterestSetter": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "contractScope": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestDoubleExponentInterestSetter": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "typeName": {
                                        "contractScope": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {
                "getCoefficients()": {
                    "return": string;
                };
                "getInterestRate(address,uint256,uint256)": {
                    "return": string;
                };
                "getMaxAPR()": {
                    "return": string;
                };
            };
            "title": string;
        };
        "userdoc": {
            "methods": {
                "getCoefficients()": {
                    "notice": string;
                };
                "getInterestRate(address,uint256,uint256)": {
                    "notice": string;
                };
                "getMaxAPR()": {
                    "notice": string;
                };
            };
        };
    };
    TestInterestSetter: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "constant": boolean;
            "inputs": ({
                "name": string;
                "type": string;
                "components"?: undefined;
            } | {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            })[];
            "name": string;
            "outputs": any[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestInterestSetter": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "contractScope": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestInterestSetter": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "contractScope": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                    };
                    "value": any;
                    "visibility": string;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestSoloMargin: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "constant": boolean;
            "inputs": ({
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            } | {
                "name": string;
                "type": string;
                "components"?: undefined;
            })[];
            "name": string;
            "outputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": ({
                "name": string;
                "type": string;
                "components"?: undefined;
            } | {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            })[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "components": ({
                    "name": string;
                    "type": string;
                    "components"?: undefined;
                } | {
                    "components": {
                        "name": string;
                        "type": string;
                    }[];
                    "name": string;
                    "type": string;
                })[];
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": any[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "components": ({
                    "name": string;
                    "type": string;
                    "components"?: undefined;
                } | {
                    "components": {
                        "name": string;
                        "type": string;
                    }[];
                    "name": string;
                    "type": string;
                })[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "inputs": ({
                "components": {
                    "components": {
                        "name": string;
                        "type": string;
                    }[];
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            } | {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            })[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "constant"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestSoloMargin": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "name"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "scope"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                    "visibility"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "expression"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": any[];
                                            "expression": {
                                                "argumentTypes": any[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "arguments": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            }[];
                                                            "expression": {
                                                                "argumentTypes": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                }[];
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                                "typeName": string;
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "names": any[];
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": any[];
                                            "expression": {
                                                "argumentTypes": any[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "arguments": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            }[];
                                                            "expression": {
                                                                "argumentTypes": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                }[];
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                                "typeName": string;
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "names": any[];
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestSoloMargin": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": any;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "name"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "scope"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                    "visibility"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "expression"?: undefined;
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "baseExpression"?: undefined;
                                "indexExpression"?: undefined;
                            };
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": any[];
                                            "expression": {
                                                "argumentTypes": any[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "arguments": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            }[];
                                                            "expression": {
                                                                "argumentTypes": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                }[];
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                                "typeName": string;
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "names": any[];
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "arguments": any[];
                                            "expression": {
                                                "argumentTypes": any[];
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "arguments": {
                                                        "argumentTypes": any;
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "id": number;
                                                            "name": string;
                                                            "nodeType": string;
                                                            "overloadedDeclarations": any[];
                                                            "referencedDeclaration": number;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    }[];
                                                    "expression": {
                                                        "argumentTypes": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        }[];
                                                        "expression": {
                                                            "argumentTypes": any;
                                                            "arguments": {
                                                                "argumentTypes": any;
                                                                "expression": {
                                                                    "argumentTypes": any;
                                                                    "id": number;
                                                                    "name": string;
                                                                    "nodeType": string;
                                                                    "overloadedDeclarations": any[];
                                                                    "referencedDeclaration": number;
                                                                    "src": string;
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": string;
                                                                        "typeString": string;
                                                                    };
                                                                };
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "memberName": string;
                                                                "nodeType": string;
                                                                "referencedDeclaration": number;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                            }[];
                                                            "expression": {
                                                                "argumentTypes": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                }[];
                                                                "id": number;
                                                                "isConstant": boolean;
                                                                "isLValue": boolean;
                                                                "isPure": boolean;
                                                                "lValueRequested": boolean;
                                                                "nodeType": string;
                                                                "src": string;
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": string;
                                                                    "typeString": string;
                                                                };
                                                                "typeName": string;
                                                            };
                                                            "id": number;
                                                            "isConstant": boolean;
                                                            "isLValue": boolean;
                                                            "isPure": boolean;
                                                            "kind": string;
                                                            "lValueRequested": boolean;
                                                            "names": any[];
                                                            "nodeType": string;
                                                            "src": string;
                                                            "typeDescriptions": {
                                                                "typeIdentifier": string;
                                                                "typeString": string;
                                                            };
                                                        };
                                                        "id": number;
                                                        "isConstant": boolean;
                                                        "isLValue": boolean;
                                                        "isPure": boolean;
                                                        "lValueRequested": boolean;
                                                        "memberName": string;
                                                        "nodeType": string;
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "kind": string;
                                                    "lValueRequested": boolean;
                                                    "names": any[];
                                                    "nodeType": string;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "names": any[];
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "baseExpression": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "indexExpression": {
                                                    "argumentTypes": any;
                                                    "expression": {
                                                        "argumentTypes": any;
                                                        "id": number;
                                                        "name": string;
                                                        "nodeType": string;
                                                        "overloadedDeclarations": any[];
                                                        "referencedDeclaration": number;
                                                        "src": string;
                                                        "typeDescriptions": {
                                                            "typeIdentifier": string;
                                                            "typeString": string;
                                                        };
                                                    };
                                                    "id": number;
                                                    "isConstant": boolean;
                                                    "isLValue": boolean;
                                                    "isPure": boolean;
                                                    "lValueRequested": boolean;
                                                    "memberName": string;
                                                    "nodeType": string;
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "nodeType": string;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "memberName"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "baseExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "indexExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "leftHandSide": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "nodeType": string;
                                        "operator": string;
                                        "rightHandSide": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0x4d7f317d2088d039c2a95a09fcbf9cc9191fad5905f883c937cc3d317c4a6327": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {
                    "AdminImpl": string;
                    "OperationImpl": string;
                };
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0x4d7f317d2088d039c2a95a09fcbf9cc9191fad5905f883c937cc3d317c4a6327": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {
                    "AdminImpl": string;
                    "OperationImpl": string;
                };
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0x4d7f317d2088d039c2a95a09fcbf9cc9191fad5905f883c937cc3d317c4a6327": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {
                    "AdminImpl": string;
                    "OperationImpl": string;
                };
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0x4d7f317d2088d039c2a95a09fcbf9cc9191fad5905f883c937cc3d317c4a6327": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                    "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {
                    "AdminImpl": string;
                    "OperationImpl": string;
                };
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "methods": {
                "getAccountBalances((address,uint256))": {
                    "params": {
                        "account": string;
                    };
                    "return": string;
                };
                "getAccountPar((address,uint256),uint256)": {
                    "params": {
                        "account": string;
                        "marketId": string;
                    };
                    "return": string;
                };
                "getAccountStatus((address,uint256))": {
                    "params": {
                        "account": string;
                    };
                    "return": string;
                };
                "getAccountValues((address,uint256))": {
                    "params": {
                        "account": string;
                    };
                    "return": string;
                };
                "getAccountWei((address,uint256),uint256)": {
                    "params": {
                        "account": string;
                        "marketId": string;
                    };
                    "return": string;
                };
                "getAdjustedAccountValues((address,uint256))": {
                    "params": {
                        "account": string;
                    };
                    "return": string;
                };
                "getEarningsRate()": {
                    "return": string;
                };
                "getIsGlobalOperator(address)": {
                    "params": {
                        "operator": string;
                    };
                    "return": string;
                };
                "getIsLocalOperator(address,address)": {
                    "params": {
                        "operator": string;
                        "owner": string;
                    };
                    "return": string;
                };
                "getLiquidationSpread()": {
                    "return": string;
                };
                "getLiquidationSpreadForPair(uint256,uint256)": {
                    "params": {
                        "heldMarketId": string;
                        "owedMarketId": string;
                    };
                    "return": string;
                };
                "getMarginRatio()": {
                    "return": string;
                };
                "getMarket(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketCachedIndex(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketCurrentIndex(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketInterestRate(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketInterestSetter(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketIsClosing(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketMarginPremium(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketPrice(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketPriceOracle(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketSpreadPremium(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketTokenAddress(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketTotalPar(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMarketWithInfo(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getMinBorrowedValue()": {
                    "return": string;
                };
                "getNumExcessTokens(uint256)": {
                    "params": {
                        "marketId": string;
                    };
                    "return": string;
                };
                "getNumMarkets()": {
                    "return": string;
                };
                "getRiskLimits()": {
                    "return": string;
                };
                "getRiskParams()": {
                    "return": string;
                };
                "isOwner()": {
                    "return": string;
                };
                "operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])": {
                    "params": {
                        "accounts": string;
                        "actions": string;
                    };
                };
                "owner()": {
                    "return": string;
                };
                "renounceOwnership()": {
                    "details": string;
                };
                "setOperators((address,bool)[])": {
                    "params": {
                        "args": string;
                    };
                };
                "transferOwnership(address)": {
                    "details": string;
                    "params": {
                        "newOwner": string;
                    };
                };
            };
        };
        "userdoc": {
            "methods": {
                "getAccountBalances((address,uint256))": {
                    "notice": string;
                };
                "getAccountPar((address,uint256),uint256)": {
                    "notice": string;
                };
                "getAccountStatus((address,uint256))": {
                    "notice": string;
                };
                "getAccountValues((address,uint256))": {
                    "notice": string;
                };
                "getAccountWei((address,uint256),uint256)": {
                    "notice": string;
                };
                "getAdjustedAccountValues((address,uint256))": {
                    "notice": string;
                };
                "getEarningsRate()": {
                    "notice": string;
                };
                "getIsGlobalOperator(address)": {
                    "notice": string;
                };
                "getIsLocalOperator(address,address)": {
                    "notice": string;
                };
                "getLiquidationSpread()": {
                    "notice": string;
                };
                "getLiquidationSpreadForPair(uint256,uint256)": {
                    "notice": string;
                };
                "getMarginRatio()": {
                    "notice": string;
                };
                "getMarket(uint256)": {
                    "notice": string;
                };
                "getMarketCachedIndex(uint256)": {
                    "notice": string;
                };
                "getMarketCurrentIndex(uint256)": {
                    "notice": string;
                };
                "getMarketInterestRate(uint256)": {
                    "notice": string;
                };
                "getMarketInterestSetter(uint256)": {
                    "notice": string;
                };
                "getMarketIsClosing(uint256)": {
                    "notice": string;
                };
                "getMarketMarginPremium(uint256)": {
                    "notice": string;
                };
                "getMarketPrice(uint256)": {
                    "notice": string;
                };
                "getMarketPriceOracle(uint256)": {
                    "notice": string;
                };
                "getMarketSpreadPremium(uint256)": {
                    "notice": string;
                };
                "getMarketTokenAddress(uint256)": {
                    "notice": string;
                };
                "getMarketTotalPar(uint256)": {
                    "notice": string;
                };
                "getMarketWithInfo(uint256)": {
                    "notice": string;
                };
                "getMinBorrowedValue()": {
                    "notice": string;
                };
                "getNumExcessTokens(uint256)": {
                    "notice": string;
                };
                "getNumMarkets()": {
                    "notice": string;
                };
                "getRiskLimits()": {
                    "notice": string;
                };
                "getRiskParams()": {
                    "notice": string;
                };
                "operate((address,uint256)[],(uint8,uint256,(bool,uint8,uint8,uint256),uint256,uint256,address,uint256,bytes)[])": {
                    "notice": string;
                };
                "ownerAddMarket(address,address,address,(uint256),(uint256))": {
                    "notice": string;
                };
                "ownerSetEarningsRate((uint256))": {
                    "notice": string;
                };
                "ownerSetGlobalOperator(address,bool)": {
                    "notice": string;
                };
                "ownerSetInterestSetter(uint256,address)": {
                    "notice": string;
                };
                "ownerSetIsClosing(uint256,bool)": {
                    "notice": string;
                };
                "ownerSetLiquidationSpread((uint256))": {
                    "notice": string;
                };
                "ownerSetMarginPremium(uint256,(uint256))": {
                    "notice": string;
                };
                "ownerSetMarginRatio((uint256))": {
                    "notice": string;
                };
                "ownerSetMinBorrowedValue((uint256))": {
                    "notice": string;
                };
                "ownerSetPriceOracle(uint256,address)": {
                    "notice": string;
                };
                "ownerSetSpreadPremium(uint256,(uint256))": {
                    "notice": string;
                };
                "ownerWithdrawExcessTokens(uint256,address)": {
                    "notice": string;
                };
                "ownerWithdrawUnsupportedTokens(address,address)": {
                    "notice": string;
                };
                "renounceOwnership()": {
                    "notice": string;
                };
                "setOperators((address,bool)[])": {
                    "notice": string;
                };
            };
        };
    };
    TestAutoTrader: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": ({
                "indexed": boolean;
                "name": string;
                "type": string;
                "components"?: undefined;
            } | {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "indexed": boolean;
                "name": string;
                "type": string;
            })[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        } | {
            "constant": boolean;
            "inputs": ({
                "name": string;
                "type": string;
                "components"?: undefined;
            } | {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            })[];
            "name": string;
            "outputs": {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestAutoTrader": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                        "contractScope"?: undefined;
                        "referencedDeclaration"?: undefined;
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "contractScope": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "name"?: undefined;
                        "contractScope"?: undefined;
                        "referencedDeclaration"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "contractScope"?: undefined;
                            "referencedDeclaration"?: undefined;
                        };
                        "name"?: undefined;
                        "contractScope"?: undefined;
                        "referencedDeclaration"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "names"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "commonType": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "leftExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "nodeType": string;
                                            "operator": string;
                                            "rightExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "commonType"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                            "commonType"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "commonType": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "leftExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "nodeType": string;
                                            "operator": string;
                                            "rightExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "commonType"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                            "commonType"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "names"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "commonType": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "leftExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "nodeType": string;
                                            "operator": string;
                                            "rightExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "commonType"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                            "commonType"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "operator"?: undefined;
                                "prefix"?: undefined;
                                "subExpression"?: undefined;
                                "name"?: undefined;
                                "overloadedDeclarations"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "eventCall"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "operator": string;
                                "prefix": boolean;
                                "src": string;
                                "subExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "name"?: undefined;
                                "overloadedDeclarations"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "isConstant"?: undefined;
                                "isLValue"?: undefined;
                                "isPure"?: undefined;
                                "kind"?: undefined;
                                "lValueRequested"?: undefined;
                                "names"?: undefined;
                                "operator"?: undefined;
                                "prefix"?: undefined;
                                "subExpression"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "commonType"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "name"?: undefined;
                                "overloadedDeclarations"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": any;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "externalReferences": ({
                                "input": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "tradeData"?: undefined;
                            } | {
                                "tradeData": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "input"?: undefined;
                            })[];
                            "id": number;
                            "nodeType": string;
                            "operations": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "isConstant"?: undefined;
                                "isLValue"?: undefined;
                                "isPure"?: undefined;
                                "kind"?: undefined;
                                "lValueRequested"?: undefined;
                                "names"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestAutoTrader": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                        "contractScope"?: undefined;
                        "referencedDeclaration"?: undefined;
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "contractScope": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "name"?: undefined;
                        "contractScope"?: undefined;
                        "referencedDeclaration"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "contractScope"?: undefined;
                            "referencedDeclaration"?: undefined;
                        };
                        "name"?: undefined;
                        "contractScope"?: undefined;
                        "referencedDeclaration"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "names"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "commonType": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "leftExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "nodeType": string;
                                            "operator": string;
                                            "rightExpression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "commonType"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                            "commonType"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "arguments": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        }[];
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "typeName": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "names": any[];
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "commonType": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "leftExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "nodeType": string;
                                            "operator": string;
                                            "rightExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "commonType"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                            "commonType"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "condition": {
                                "argumentTypes": any;
                                "commonType": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftExpression": {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightExpression": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "arguments"?: undefined;
                                    "expression"?: undefined;
                                    "names"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "falseBody": any;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "trueBody": {
                                "id": number;
                                "nodeType": string;
                                "src": string;
                                "statements": {
                                    "expression": {
                                        "argumentTypes": any;
                                        "arguments": ({
                                            "argumentTypes": any;
                                            "commonType": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "leftExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "nodeType": string;
                                            "operator": string;
                                            "rightExpression": {
                                                "argumentTypes": any;
                                                "expression": {
                                                    "argumentTypes": any;
                                                    "id": number;
                                                    "name": string;
                                                    "nodeType": string;
                                                    "overloadedDeclarations": any[];
                                                    "referencedDeclaration": number;
                                                    "src": string;
                                                    "typeDescriptions": {
                                                        "typeIdentifier": string;
                                                        "typeString": string;
                                                    };
                                                };
                                                "id": number;
                                                "isConstant": boolean;
                                                "isLValue": boolean;
                                                "isPure": boolean;
                                                "lValueRequested": boolean;
                                                "memberName": string;
                                                "nodeType": string;
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "commonType"?: undefined;
                                            "isConstant"?: undefined;
                                            "isLValue"?: undefined;
                                            "isPure"?: undefined;
                                            "lValueRequested"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "hexValue"?: undefined;
                                            "kind"?: undefined;
                                            "subdenomination"?: undefined;
                                            "value"?: undefined;
                                        } | {
                                            "argumentTypes": any;
                                            "hexValue": string;
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "kind": string;
                                            "lValueRequested": boolean;
                                            "nodeType": string;
                                            "src": string;
                                            "subdenomination": any;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                            "value": string;
                                            "commonType"?: undefined;
                                            "leftExpression"?: undefined;
                                            "operator"?: undefined;
                                            "rightExpression"?: undefined;
                                            "name"?: undefined;
                                            "overloadedDeclarations"?: undefined;
                                            "referencedDeclaration"?: undefined;
                                        })[];
                                        "expression": {
                                            "argumentTypes": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            }[];
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "names": any[];
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "nodeType": string;
                                    "src": string;
                                }[];
                            };
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "condition"?: undefined;
                            "falseBody"?: undefined;
                            "trueBody"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "kind"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "baseExpression"?: undefined;
                                    "indexExpression"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "operator"?: undefined;
                                "prefix"?: undefined;
                                "subExpression"?: undefined;
                                "name"?: undefined;
                                "overloadedDeclarations"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "baseExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "indexExpression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "eventCall"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "operator": string;
                                "prefix": boolean;
                                "src": string;
                                "subExpression": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                                "name"?: undefined;
                                "overloadedDeclarations"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "isConstant"?: undefined;
                                "isLValue"?: undefined;
                                "isPure"?: undefined;
                                "kind"?: undefined;
                                "lValueRequested"?: undefined;
                                "names"?: undefined;
                                "operator"?: undefined;
                                "prefix"?: undefined;
                                "subExpression"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "commonType"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "name"?: undefined;
                                "overloadedDeclarations"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": any;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "externalReferences": ({
                                "input": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "tradeData"?: undefined;
                            } | {
                                "tradeData": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "input"?: undefined;
                            })[];
                            "id": number;
                            "nodeType": string;
                            "operations": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "isConstant"?: undefined;
                                "isLValue"?: undefined;
                                "isPure"?: undefined;
                                "kind"?: undefined;
                                "lValueRequested"?: undefined;
                                "names"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0xf5a75b9133c4ad3380c8fb241cbd49cbc06a972af65c00521cb656776e8eab0f": {
                        "anonymous": boolean;
                        "inputs": ({
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                            "components"?: undefined;
                        } | {
                            "components": {
                                "name": string;
                                "type": string;
                            }[];
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        })[];
                        "name": string;
                        "type": string;
                    };
                    "0xc08afd407b9302167fb675f0504288e953f9807568a5e2b502d47ea8bc6dcbed": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0xf5a75b9133c4ad3380c8fb241cbd49cbc06a972af65c00521cb656776e8eab0f": {
                        "anonymous": boolean;
                        "inputs": ({
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                            "components"?: undefined;
                        } | {
                            "components": {
                                "name": string;
                                "type": string;
                            }[];
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        })[];
                        "name": string;
                        "type": string;
                    };
                    "0xc08afd407b9302167fb675f0504288e953f9807568a5e2b502d47ea8bc6dcbed": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0xf5a75b9133c4ad3380c8fb241cbd49cbc06a972af65c00521cb656776e8eab0f": {
                        "anonymous": boolean;
                        "inputs": ({
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                            "components"?: undefined;
                        } | {
                            "components": {
                                "name": string;
                                "type": string;
                            }[];
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        })[];
                        "name": string;
                        "type": string;
                    };
                    "0xc08afd407b9302167fb675f0504288e953f9807568a5e2b502d47ea8bc6dcbed": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0xf5a75b9133c4ad3380c8fb241cbd49cbc06a972af65c00521cb656776e8eab0f": {
                        "anonymous": boolean;
                        "inputs": ({
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                            "components"?: undefined;
                        } | {
                            "components": {
                                "name": string;
                                "type": string;
                            }[];
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        })[];
                        "name": string;
                        "type": string;
                    };
                    "0xc08afd407b9302167fb675f0504288e953f9807568a5e2b502d47ea8bc6dcbed": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestCallee: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "constant"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        } | {
            "constant": boolean;
            "inputs": ({
                "name": string;
                "type": string;
                "components"?: undefined;
            } | {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            })[];
            "name": string;
            "outputs": any[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestCallee": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "keyType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "valueType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "name"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "keyType"?: undefined;
                            "valueType"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "baseExpression"?: undefined;
                                        "indexExpression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "lValueRequested": boolean;
                            "memberName": string;
                            "nodeType": string;
                            "referencedDeclaration": any;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "commonType"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "components"?: undefined;
                                "isInlineArray"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": any;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "externalReferences": ({
                                "aData": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "data"?: undefined;
                                "sData"?: undefined;
                            } | {
                                "data": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "aData"?: undefined;
                                "sData"?: undefined;
                            } | {
                                "sData": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "aData"?: undefined;
                                "data"?: undefined;
                            })[];
                            "id": number;
                            "nodeType": string;
                            "operations": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "components": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "id": number;
                                "isConstant": boolean;
                                "isInlineArray": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestCallee": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "keyType"?: undefined;
                        "valueType"?: undefined;
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "keyType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "valueType": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "name"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "keyType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "valueType": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "keyType"?: undefined;
                            "valueType"?: undefined;
                        };
                        "name"?: undefined;
                    };
                    "value": any;
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "eventCall"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "expression"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "baseExpression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "indexExpression": {
                                            "argumentTypes": any;
                                            "expression": {
                                                "argumentTypes": any;
                                                "id": number;
                                                "name": string;
                                                "nodeType": string;
                                                "overloadedDeclarations": any[];
                                                "referencedDeclaration": number;
                                                "src": string;
                                                "typeDescriptions": {
                                                    "typeIdentifier": string;
                                                    "typeString": string;
                                                };
                                            };
                                            "id": number;
                                            "isConstant": boolean;
                                            "isLValue": boolean;
                                            "isPure": boolean;
                                            "lValueRequested": boolean;
                                            "memberName": string;
                                            "nodeType": string;
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                        "referencedDeclaration"?: undefined;
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "name"?: undefined;
                                        "overloadedDeclarations"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "leftHandSide": {
                                    "argumentTypes": any;
                                    "baseExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "baseExpression"?: undefined;
                                        "indexExpression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                    };
                                    "id": number;
                                    "indexExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "expression"?: undefined;
                                        "isConstant"?: undefined;
                                        "isLValue"?: undefined;
                                        "isPure"?: undefined;
                                        "lValueRequested"?: undefined;
                                        "memberName"?: undefined;
                                    };
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "nodeType": string;
                                "operator": string;
                                "rightHandSide": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "eventCall"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "lValueRequested": boolean;
                            "memberName": string;
                            "nodeType": string;
                            "referencedDeclaration": any;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "commonType"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                    "referencedDeclaration"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "components"?: undefined;
                                "isInlineArray"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": any;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "externalReferences": ({
                                "aData": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "data"?: undefined;
                                "sData"?: undefined;
                            } | {
                                "data": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "aData"?: undefined;
                                "sData"?: undefined;
                            } | {
                                "sData": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "aData"?: undefined;
                                "data"?: undefined;
                            })[];
                            "id": number;
                            "nodeType": string;
                            "operations": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "components": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "id": number;
                                "isConstant": boolean;
                                "isInlineArray": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0x4c3c182d38f9efecd4bc09ba9ff16cf39e0b4c71b7f0286d0306f9ef91a5a6a8": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0x4c3c182d38f9efecd4bc09ba9ff16cf39e0b4c71b7f0286d0306f9ef91a5a6a8": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0x4c3c182d38f9efecd4bc09ba9ff16cf39e0b4c71b7f0286d0306f9ef91a5a6a8": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0x4c3c182d38f9efecd4bc09ba9ff16cf39e0b4c71b7f0286d0306f9ef91a5a6a8": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestSimpleCallee: {
        "contractName": string;
        "abi": ({
            "constant": boolean;
            "inputs": any[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        } | {
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "constant"?: undefined;
            "name"?: undefined;
            "outputs"?: undefined;
            "anonymous"?: undefined;
        } | {
            "anonymous": boolean;
            "inputs": {
                "indexed": boolean;
                "name": string;
                "type": string;
            }[];
            "name": string;
            "type": string;
            "constant"?: undefined;
            "outputs"?: undefined;
            "payable"?: undefined;
            "stateMutability"?: undefined;
        } | {
            "constant": boolean;
            "inputs": ({
                "name": string;
                "type": string;
                "components"?: undefined;
            } | {
                "components": {
                    "name": string;
                    "type": string;
                }[];
                "name": string;
                "type": string;
            })[];
            "name": string;
            "outputs": any[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
            "anonymous"?: undefined;
        })[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestSimpleCallee": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "lValueRequested": boolean;
                            "memberName": string;
                            "nodeType": string;
                            "referencedDeclaration": any;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestSimpleCallee": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "hexValue": string;
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "nodeType": string;
                        "src": string;
                        "subdenomination": any;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "value": string;
                    };
                    "visibility": string;
                    "anonymous"?: undefined;
                    "documentation"?: undefined;
                    "parameters"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "anonymous": boolean;
                    "documentation": any;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "indexed": boolean;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "src": string;
                    "constant"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "body"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": any[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": {
                            "eventCall": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                        }[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": {
                        "arguments": {
                            "argumentTypes": any;
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "lValueRequested": boolean;
                            "memberName": string;
                            "nodeType": string;
                            "referencedDeclaration": any;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        }[];
                        "id": number;
                        "modifierName": {
                            "argumentTypes": any;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "overloadedDeclarations": any[];
                            "referencedDeclaration": number;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "nodeType": string;
                        "src": string;
                    }[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                                "contractScope"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": any[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "typeName"?: undefined;
                    "value"?: undefined;
                    "anonymous"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "971": {
                "events": {
                    "0x879870a16ac2bddaa2e1116e5fe418c112bbd88b7ec25e3e990cc0f1443592ef": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668017230626": {
                "events": {
                    "0x879870a16ac2bddaa2e1116e5fe418c112bbd88b7ec25e3e990cc0f1443592ef": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668030274040": {
                "events": {
                    "0x879870a16ac2bddaa2e1116e5fe418c112bbd88b7ec25e3e990cc0f1443592ef": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
            "1668138174137": {
                "events": {
                    "0x879870a16ac2bddaa2e1116e5fe418c112bbd88b7ec25e3e990cc0f1443592ef": {
                        "anonymous": boolean;
                        "inputs": {
                            "indexed": boolean;
                            "name": string;
                            "type": string;
                        }[];
                        "name": string;
                        "type": string;
                    };
                };
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
    TestExchangeWrapper: {
        "contractName": string;
        "abi": {
            "constant": boolean;
            "inputs": {
                "name": string;
                "type": string;
            }[];
            "name": string;
            "outputs": {
                "name": string;
                "type": string;
            }[];
            "payable": boolean;
            "stateMutability": string;
            "type": string;
        }[];
        "metadata": string;
        "bytecode": string;
        "deployedBytecode": string;
        "sourceMap": string;
        "deployedSourceMap": string;
        "source": string;
        "sourcePath": string;
        "ast": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestExchangeWrapper": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "stateMutability": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "constant"?: undefined;
                    "name"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "canonicalName"?: undefined;
                    "members"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "stateMutability": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "arguments": {
                            "argumentTypes": any;
                            "hexValue": string;
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "kind": string;
                            "lValueRequested": boolean;
                            "nodeType": string;
                            "src": string;
                            "subdenomination": any;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "value": string;
                        }[];
                        "expression": {
                            "argumentTypes": {
                                "typeIdentifier": string;
                                "typeString": string;
                            }[];
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "lValueRequested": boolean;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": string;
                        };
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "names": any[];
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "visibility": string;
                    "libraryName"?: undefined;
                    "canonicalName"?: undefined;
                    "members"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "canonicalName": string;
                    "id": number;
                    "members": ({
                        "constant": boolean;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "scope": number;
                        "src": string;
                        "stateVariable": boolean;
                        "storageLocation": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "typeName": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "stateMutability": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "value": any;
                        "visibility": string;
                    } | {
                        "constant": boolean;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "scope": number;
                        "src": string;
                        "stateVariable": boolean;
                        "storageLocation": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "typeName": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "stateMutability"?: undefined;
                        };
                        "value": any;
                        "visibility": string;
                    })[];
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "canonicalName"?: undefined;
                    "members"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "name"?: undefined;
                                "overloadedDeclarations"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": any;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "externalReferences": ({
                                "order": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "orderData"?: undefined;
                            } | {
                                "orderData": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "order"?: undefined;
                            })[];
                            "id": number;
                            "nodeType": string;
                            "operations": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "isConstant"?: undefined;
                                "isLValue"?: undefined;
                                "isPure"?: undefined;
                                "kind"?: undefined;
                                "lValueRequested"?: undefined;
                                "names"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "canonicalName"?: undefined;
                    "members"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "legacyAST": {
            "absolutePath": string;
            "exportedSymbols": {
                "TestExchangeWrapper": number[];
            };
            "id": number;
            "nodeType": string;
            "nodes": ({
                "id": number;
                "literals": string[];
                "nodeType": string;
                "src": string;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "scope"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "absolutePath": string;
                "file": string;
                "id": number;
                "nodeType": string;
                "scope": number;
                "sourceUnit": number;
                "src": string;
                "symbolAliases": {
                    "foreign": number;
                    "local": any;
                }[];
                "unitAlias": string;
                "literals"?: undefined;
                "baseContracts"?: undefined;
                "contractDependencies"?: undefined;
                "contractKind"?: undefined;
                "documentation"?: undefined;
                "fullyImplemented"?: undefined;
                "linearizedBaseContracts"?: undefined;
                "name"?: undefined;
                "nodes"?: undefined;
            } | {
                "baseContracts": {
                    "arguments": any;
                    "baseName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "id": number;
                    "nodeType": string;
                    "src": string;
                }[];
                "contractDependencies": number[];
                "contractKind": string;
                "documentation": string;
                "fullyImplemented": boolean;
                "id": number;
                "linearizedBaseContracts": number[];
                "name": string;
                "nodeType": string;
                "nodes": ({
                    "id": number;
                    "libraryName": {
                        "contractScope": any;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "referencedDeclaration": number;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "nodeType": string;
                    "src": string;
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "stateMutability": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "constant"?: undefined;
                    "name"?: undefined;
                    "scope"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "visibility"?: undefined;
                    "canonicalName"?: undefined;
                    "members"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "constant": boolean;
                    "id": number;
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "stateVariable": boolean;
                    "storageLocation": string;
                    "typeDescriptions": {
                        "typeIdentifier": string;
                        "typeString": string;
                    };
                    "typeName": {
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "src": string;
                        "stateMutability": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "value": {
                        "argumentTypes": any;
                        "arguments": {
                            "argumentTypes": any;
                            "hexValue": string;
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "kind": string;
                            "lValueRequested": boolean;
                            "nodeType": string;
                            "src": string;
                            "subdenomination": any;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "value": string;
                        }[];
                        "expression": {
                            "argumentTypes": {
                                "typeIdentifier": string;
                                "typeString": string;
                            }[];
                            "id": number;
                            "isConstant": boolean;
                            "isLValue": boolean;
                            "isPure": boolean;
                            "lValueRequested": boolean;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": string;
                        };
                        "id": number;
                        "isConstant": boolean;
                        "isLValue": boolean;
                        "isPure": boolean;
                        "kind": string;
                        "lValueRequested": boolean;
                        "names": any[];
                        "nodeType": string;
                        "src": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                    };
                    "visibility": string;
                    "libraryName"?: undefined;
                    "canonicalName"?: undefined;
                    "members"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "canonicalName": string;
                    "id": number;
                    "members": ({
                        "constant": boolean;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "scope": number;
                        "src": string;
                        "stateVariable": boolean;
                        "storageLocation": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "typeName": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "stateMutability": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                        };
                        "value": any;
                        "visibility": string;
                    } | {
                        "constant": boolean;
                        "id": number;
                        "name": string;
                        "nodeType": string;
                        "scope": number;
                        "src": string;
                        "stateVariable": boolean;
                        "storageLocation": string;
                        "typeDescriptions": {
                            "typeIdentifier": string;
                            "typeString": string;
                        };
                        "typeName": {
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "src": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "stateMutability"?: undefined;
                        };
                        "value": any;
                        "visibility": string;
                    })[];
                    "name": string;
                    "nodeType": string;
                    "scope": number;
                    "src": string;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "body"?: undefined;
                    "documentation"?: undefined;
                    "implemented"?: undefined;
                    "kind"?: undefined;
                    "modifiers"?: undefined;
                    "parameters"?: undefined;
                    "returnParameters"?: undefined;
                    "stateMutability"?: undefined;
                    "superFunction"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": {
                                "argumentTypes": any;
                                "arguments": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                }[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "expression": {
                                        "argumentTypes": any;
                                        "id": number;
                                        "name": string;
                                        "nodeType": string;
                                        "overloadedDeclarations": any[];
                                        "referencedDeclaration": number;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "memberName": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "name"?: undefined;
                                    "overloadedDeclarations"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "memberName"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "expression": {
                                    "argumentTypes": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": any[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "expression"?: undefined;
                                    "isConstant"?: undefined;
                                    "isLValue"?: undefined;
                                    "isPure"?: undefined;
                                    "lValueRequested"?: undefined;
                                    "memberName"?: undefined;
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "lValueRequested": boolean;
                                "memberName": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "kind"?: undefined;
                                "names"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": ({
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "stateMutability": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        } | {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "stateMutability"?: undefined;
                            };
                            "value": any;
                            "visibility": string;
                        })[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": number;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "canonicalName"?: undefined;
                    "members"?: undefined;
                } | {
                    "body": {
                        "id": number;
                        "nodeType": string;
                        "src": string;
                        "statements": ({
                            "expression": {
                                "argumentTypes": any;
                                "arguments": ({
                                    "argumentTypes": any;
                                    "commonType": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "lValueRequested": boolean;
                                    "leftExpression": {
                                        "argumentTypes": any;
                                        "expression": {
                                            "argumentTypes": any;
                                            "id": number;
                                            "name": string;
                                            "nodeType": string;
                                            "overloadedDeclarations": any[];
                                            "referencedDeclaration": number;
                                            "src": string;
                                            "typeDescriptions": {
                                                "typeIdentifier": string;
                                                "typeString": string;
                                            };
                                        };
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "lValueRequested": boolean;
                                        "memberName": string;
                                        "nodeType": string;
                                        "referencedDeclaration": any;
                                        "src": string;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                    };
                                    "nodeType": string;
                                    "operator": string;
                                    "rightExpression": {
                                        "argumentTypes": any;
                                        "hexValue": string;
                                        "id": number;
                                        "isConstant": boolean;
                                        "isLValue": boolean;
                                        "isPure": boolean;
                                        "kind": string;
                                        "lValueRequested": boolean;
                                        "nodeType": string;
                                        "src": string;
                                        "subdenomination": any;
                                        "typeDescriptions": {
                                            "typeIdentifier": string;
                                            "typeString": string;
                                        };
                                        "value": string;
                                    };
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "hexValue"?: undefined;
                                    "kind"?: undefined;
                                    "subdenomination"?: undefined;
                                    "value"?: undefined;
                                } | {
                                    "argumentTypes": any;
                                    "hexValue": string;
                                    "id": number;
                                    "isConstant": boolean;
                                    "isLValue": boolean;
                                    "isPure": boolean;
                                    "kind": string;
                                    "lValueRequested": boolean;
                                    "nodeType": string;
                                    "src": string;
                                    "subdenomination": any;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                    "value": string;
                                    "commonType"?: undefined;
                                    "leftExpression"?: undefined;
                                    "operator"?: undefined;
                                    "rightExpression"?: undefined;
                                })[];
                                "expression": {
                                    "argumentTypes": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    }[];
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "overloadedDeclarations": number[];
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "id": number;
                                "isConstant": boolean;
                                "isLValue": boolean;
                                "isPure": boolean;
                                "kind": string;
                                "lValueRequested": boolean;
                                "names": any[];
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "name"?: undefined;
                                "overloadedDeclarations"?: undefined;
                                "referencedDeclaration"?: undefined;
                            };
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "assignments": number[];
                            "declarations": {
                                "constant": boolean;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "scope": number;
                                "src": string;
                                "stateVariable": boolean;
                                "storageLocation": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "typeName": {
                                    "contractScope": any;
                                    "id": number;
                                    "name": string;
                                    "nodeType": string;
                                    "referencedDeclaration": number;
                                    "src": string;
                                    "typeDescriptions": {
                                        "typeIdentifier": string;
                                        "typeString": string;
                                    };
                                };
                                "value": any;
                                "visibility": string;
                            }[];
                            "id": number;
                            "initialValue": any;
                            "nodeType": string;
                            "src": string;
                            "expression"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "externalReferences": ({
                                "order": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "orderData"?: undefined;
                            } | {
                                "orderData": {
                                    "declaration": number;
                                    "isOffset": boolean;
                                    "isSlot": boolean;
                                    "src": string;
                                    "valueSize": number;
                                };
                                "order"?: undefined;
                            })[];
                            "id": number;
                            "nodeType": string;
                            "operations": string;
                            "src": string;
                            "expression"?: undefined;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "functionReturnParameters"?: undefined;
                        } | {
                            "expression": {
                                "argumentTypes": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "overloadedDeclarations": any[];
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                                "arguments"?: undefined;
                                "expression"?: undefined;
                                "isConstant"?: undefined;
                                "isLValue"?: undefined;
                                "isPure"?: undefined;
                                "kind"?: undefined;
                                "lValueRequested"?: undefined;
                                "names"?: undefined;
                            };
                            "functionReturnParameters": number;
                            "id": number;
                            "nodeType": string;
                            "src": string;
                            "assignments"?: undefined;
                            "declarations"?: undefined;
                            "initialValue"?: undefined;
                            "externalReferences"?: undefined;
                            "operations"?: undefined;
                        })[];
                    };
                    "documentation": any;
                    "id": number;
                    "implemented": boolean;
                    "kind": string;
                    "modifiers": any[];
                    "name": string;
                    "nodeType": string;
                    "parameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "returnParameters": {
                        "id": number;
                        "nodeType": string;
                        "parameters": {
                            "constant": boolean;
                            "id": number;
                            "name": string;
                            "nodeType": string;
                            "scope": number;
                            "src": string;
                            "stateVariable": boolean;
                            "storageLocation": string;
                            "typeDescriptions": {
                                "typeIdentifier": string;
                                "typeString": string;
                            };
                            "typeName": {
                                "contractScope": any;
                                "id": number;
                                "name": string;
                                "nodeType": string;
                                "referencedDeclaration": number;
                                "src": string;
                                "typeDescriptions": {
                                    "typeIdentifier": string;
                                    "typeString": string;
                                };
                            };
                            "value": any;
                            "visibility": string;
                        }[];
                        "src": string;
                    };
                    "scope": number;
                    "src": string;
                    "stateMutability": string;
                    "superFunction": any;
                    "visibility": string;
                    "libraryName"?: undefined;
                    "typeName"?: undefined;
                    "constant"?: undefined;
                    "stateVariable"?: undefined;
                    "storageLocation"?: undefined;
                    "typeDescriptions"?: undefined;
                    "value"?: undefined;
                    "canonicalName"?: undefined;
                    "members"?: undefined;
                })[];
                "scope": number;
                "src": string;
                "literals"?: undefined;
                "absolutePath"?: undefined;
                "file"?: undefined;
                "sourceUnit"?: undefined;
                "symbolAliases"?: undefined;
                "unitAlias"?: undefined;
            })[];
            "src": string;
        };
        "compiler": {
            "name": string;
            "version": string;
        };
        "networks": {
            "1668138174137": {
                "events": {};
                "links": {};
                "address": string;
                "transactionHash": string;
            };
        };
        "schemaVersion": string;
        "updatedAt": string;
        "networkType": string;
        "devdoc": {
            "author": string;
            "methods": {};
            "title": string;
        };
        "userdoc": {
            "methods": {};
        };
    };
};
export default _default;
