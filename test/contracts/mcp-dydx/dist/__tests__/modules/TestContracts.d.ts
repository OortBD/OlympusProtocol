import { Provider } from 'web3/providers';
import Web3 from 'web3';
import { TestSoloMargin } from '../../build/testing_wrappers/TestSoloMargin';
import { TestToken } from '../../build/testing_wrappers/TestToken';
import { TestLib } from '../../build/testing_wrappers/TestLib';
import { TestAutoTrader } from '../../build/testing_wrappers/TestAutoTrader';
import { TestCallee } from '../../build/testing_wrappers/TestCallee';
import { TestSimpleCallee } from '../../build/testing_wrappers/TestSimpleCallee';
import { TestExchangeWrapper } from '../../build/testing_wrappers/TestExchangeWrapper';
import { TestPriceOracle } from '../../build/testing_wrappers/TestPriceOracle';
import { TestMakerOracle } from '../../build/testing_wrappers/TestMakerOracle';
import { TestCurve } from '../../build/testing_wrappers/TestCurve';
import { TestUniswapV2Pair } from '../../build/testing_wrappers/TestUniswapV2Pair';
import { TestUniswapV2Pair2 } from '../../build/testing_wrappers/TestUniswapV2Pair2';
import { TestInterestSetter } from '../../build/testing_wrappers/TestInterestSetter';
import { TestPolynomialInterestSetter } from '../../build/testing_wrappers/TestPolynomialInterestSetter';
import { TestDoubleExponentInterestSetter } from '../../build/testing_wrappers/TestDoubleExponentInterestSetter';
import { address, SoloOptions } from '../../src/types';
import { Contracts } from '../../src/lib/Contracts';
export declare class TestContracts extends Contracts {
    soloMargin: TestSoloMargin;
    testSoloMargin: TestSoloMargin;
    tokenA: TestToken;
    tokenB: TestToken;
    tokenC: TestToken;
    erroringToken: TestToken;
    omiseToken: TestToken;
    testLib: TestLib;
    testAutoTrader: TestAutoTrader;
    testCallee: TestCallee;
    testSimpleCallee: TestSimpleCallee;
    testExchangeWrapper: TestExchangeWrapper;
    testPriceOracle: TestPriceOracle;
    testMakerOracle: TestMakerOracle;
    testCurve: TestCurve;
    testUniswapV2Pair: TestUniswapV2Pair;
    testUniswapV2Pair2: TestUniswapV2Pair2;
    testPolynomialInterestSetter: TestPolynomialInterestSetter;
    testDoubleExponentInterestSetter: TestDoubleExponentInterestSetter;
    testInterestSetter: TestInterestSetter;
    constructor(provider: Provider, networkId: number, web3: Web3, options: SoloOptions);
    setProvider(provider: Provider, networkId: number): void;
    setDefaultAccount(account: address): void;
}
